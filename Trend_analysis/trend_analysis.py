# -*- coding: utf-8 -*-
"""Trend_analysis.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Li35vj0rQcLTni4M3WRlmG7rPa_TYPUs
"""

from geng_analysis import *
from griffin_analysis import *
from jinairgw_analysis import *
from kingzonedx_analysis import *
from sbgaming_kor_analysis import *
from t1lol_analysis import *
from faker_analysis import *
from kespa_analysis import *

# 모든 팀의 좋아요 증가율
total_avg = {}
total_avg['GenG'] = geng_avg
total_avg['Griffin'] = gri_avg
total_avg['JinAirGW'] = jin_avg
total_avg['KINGZONEDX'] = king_avg
total_avg['SBGaming_KOR'] = sb_avg
total_avg['T1LoL'] = t1_avg
total_avg['faker'] = faker_avg
total_avg['kespa'] = ke_avg

# 내림차순 정렬
# 딕셔너리 -> 튜플
sort_avg = sorted(total_avg.items(), key=lambda x: x[1], reverse=True)

# 순위 확인을 위해서 Pandas에서 제공하는 dataframe을 활용
import pandas as pd
import plotly
import plotly.figure_factory as ff

# 팔로우 수 고려X 좋아요 수 기준 순위
df = pd.DataFrame(sort_avg, columns=['NAME', 'LIKES(per minute)'])
df.index += 1
print(df)

table = ff.create_table(df)
plotly.offline.iplot(table,filename='rank_table')

# 팔로우 수 고려(대비) 좋아요 수 순위 구하기 위한 과정

# 계정의 팔로우 수 수집
import requests 
from requests_oauthlib import OAuth1
import datetime
import sys

consumer_key = "H6n8iNGjoYn7LSAwJ4EVdgUp0"
consumer_secret = "EG3xEAZiBVTqhcyD4vraMI77DWZqc011WAKQUQKUEDJQvu8KXD"
access_token = "1106089951026802688-mjt7lFHt0ztzZ5rfavuhBwkduALIcK"
access_token_secret = "goZqDYEn0RlJotylyky6MgW4XVGKvT7Ts9EY1eVqtA7K6"

oauth = OAuth1(client_key=consumer_key, client_secret=consumer_secret, resource_owner_key=access_token, resource_owner_secret=access_token_secret)

follower = {}
team = ['faker', 'T1LoL', 'Griffin', 'GenG', 'DRXGlobal', 'SBGaming_KOR', 'JinAirGW', 'kespa']

def get_information(twit_id):
    url = 'https://api.twitter.com/1.1/statuses/user_timeline.json?screen_name={0}'.format(twit_id)
    #url += '&count=70&since_id='+since_id
    url+='&count=1'
    r = requests.get(url=url, auth=oauth)
    statuses = r.json()
    
    for status in statuses:
      if twit_id == 'DRXGlobal':
        twit_id = 'KINGZONEDX'
      follower[twit_id] = status['user']['followers_count']

for id in team:
  get_information(id)

# 내림차순 정렬
# 딕셔너리 -> 튜플
follower = sorted(follower.items(), key=lambda x: x[1], reverse=True)

# 팔로우 수 고려(대비) 좋아요 수 기준 순위
follower_df = pd.DataFrame(follower, columns=['NAME', 'FOLLOWER'])

follower_df = pd.merge(follower_df,df, on="NAME")
follower_df.index += 1
print(follower_df)

follower_table = ff.create_table(follower_df)
plotly.offline.iplot(follower_table, filename='rank_with_follower_table')